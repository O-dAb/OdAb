services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - server
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=/api
      # - NEXT_PUBLIC_API_URL=https://server:8080
    restart: always
    networks:
      - app-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - SPRING_DATASOURCE_URL=jdbc:mysql://my-db:3306/${MYSQL_DATABASE}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_TOKEN_VALIDITY=${JWT_ACCESS_TOKEN_VALIDITY}
      - JWT_REFRESH_TOKEN_VALIDITY=${JWT_REFRESH_TOKEN_VALIDITY}
      - MY_DB=${MY_DB}
      - EXTERNAL_BANK_API_URL=${EXTERNAL_BANK_API_URL}
      - EXTERNAL_BANK_API_KEY=${EXTERNAL_BANK_API_KEY}
      - EXTERNAL_BANK_API_ACCOUNTTYPE=${EXTERNAL_BANK_API_ACCOUNTTYPE}
      - EXTERNAL_USER_API_URL=${EXTERNAL_USER_API_URL}
      # - SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - SPRING_DATA_REDIS_HOST=${SPRING_DATA_REDIS_HOST}
      - SPRING_DATA_REDIS_PORT=${SPRING_DATA_REDIS_PORT}
      - SPRING_DATA_REDIS_PASSWORD=${SPRING_DATA_REDIS_PASSWORD}

    depends_on:
      my-db:
        condition: service_healthy
      my-cache-server:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  my-db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      # - MYSQL_ROOT_HOST=%
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      # - ./mysql_data:/var/lib/mysql
      - mysql_data_volume:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    ports:
      - 3307:3306
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping" ]
      interval: 5s
      retries: 10

  my-cache-server:
    image: redis
    ports:
      - 6379:6379
    # command: redis-server --port 6379 --protected-mode yes
    command: redis-server --port 6379 --requirepass ${SPRING_DATA_REDIS_PASSWORD}
    volumes:
      # - ./redis_data:/data
      - redis_data_volume:/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${SPRING_DATA_REDIS_PASSWORD}", "ping" ]
      interval: 5s
      retries: 10

  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "3001:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/conf.d:/etc/nginx/conf.d        # 로컬 설정 파일을 컨테이너 내부로 마운트
  #     - /etc/letsencrypt:/etc/letsencrypt:ro    # SSL 인증서 마운트
  #   depends_on:
  #     - client
  #   restart: always
  #   networks:
  #     - app-network

volumes:
  mysql_data_volume:
  redis_data_volume:
networks:
  app-network:
    driver: bridge