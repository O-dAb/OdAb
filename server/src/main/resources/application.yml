spring:
  application:
    name: server
  jackson:
    time-zone: Asia/Seoul
  datasource:
    url: jdbc:mysql://${MY_DB}:3307/${MYSQL_DATABASE}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
    # password: ${MYSQL_ROOT_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    generate-ddl: false
    hibernate:
      ddl-auto: none
      show-sql: true

    properties:
      hibernate:
        #        show-sql: true
        # format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
  #        hbm2ddl:
  #          auto: update

  data:
    redis:
      # host: localhost
      host: ${SPRING_DATA_REDIS_HOST}
      port: ${SPRING_DATA_REDIS_PORT}
      password: ${SPRING_DATA_REDIS_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - profile_nickname
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id



logging.level:
  org.hibernate.SQL: DEBUG
  org.hibernate.type.descriptor.sql: TRACE  # 바인딩되는 파라미터 값 표시
  org.springframework.orm.jpa: DEBUG         # JPA 관련 더 자세한 로그
  org.hibernate.tool.hbm2ddl: DEBUG         # 스키마 생성 관련 로그
  org.springframework:
    security: DEBUG
    web.socket: DEBUG
    messaging: DEBUG
  com.ssafy.odab: DEBUG

paging:
  default-page-size: 10
  default-page-number: 0

# springdoc:
#   swagger-ui:
#     path: /index.html
#   api-docs:
#     path: /v3/api-docs

jwt:
  secret: ${JWT_SECRET}
  access-token-validity: ${JWT_ACCESS_TOKEN_VALIDITY}
  refresh-token-validity: ${JWT_REFRESH_TOKEN_VALIDITY}


server:
  port: 8080

# S3
cloud:
  aws:
    s3:
      bucket: ${CLOUD_AWS_S3_BUCKET}
    stack:
      auto: false
    region:
      static: ap-northeast-2
    credentials:
      access-key: ${CLOUD_AWS_CREDENTIALS_ACCESS_KEY}
      secret-key: ${CLOUD_AWS_CREDENTIALS_SECRET_KEY}


app:
  health-controller:
    enabled: true
