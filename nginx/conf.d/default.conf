# Canary 배포를 위한 백엔드 서비스 구성 (Spring)
upstream canary_server {
    server server-stable:8080 weight=${stableWeight};  
    server server-canary:8080 weight=${canaryWeight}; 
}

# Canary 배포를 위한 프론트엔드 서비스 구성 (Next.js)
upstream canary_client {
    server client-stable:3000 weight=${stableWeight}; 
    server client-canary:3000 weight=${canaryWeight};  
}

upstream canary_python {
    server python-stable:8000 weight=${stableWeight};
    server python-canary:8000 weight=${canaryWeight};
}


# HTTPS 설정
server {
    listen 443 ssl;
    server_name k12b103.p.ssafy.io;

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/k12b103.p.ssafy.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/k12b103.p.ssafy.io/privkey.pem;

    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers 'HIGH:!aNULL:!MD5';

    # API 요청 처리
    location /api {
        proxy_pass http://canary_server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # 타임아웃 설정
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
    }

    # 중복된 /api/api 경로 처리
    location /api/api/ {
        # 첫 번째 /api/를 제거
        rewrite ^/api/api/(.*)$ /api/$1 break;
        proxy_pass http://canary_server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /api/python/ {
        proxy_pass http://canary_python;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
}

    # 웹소켓 라우팅 설정
    location /ws {
        proxy_pass http://canary_server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_buffering off;
    }

    # Next.js의 정적 파일 캐싱
    location /_next/static/ {
        proxy_pass http://canary_client/_next/static/;
        proxy_set_header Host $host;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # 프론트엔드 라우팅
    location / {
        proxy_pass http://canary_client;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTP → HTTPS 리다이렉션
server {
    listen 80;
    server_name k12b103.p.ssafy.io;
    return 301 https://$host$request_uri;
}

# HTTP 전용 설정으로 canary.conf 파일 수정
# upstream server {
#     server localhost:8081 weight=100;  # stable
#     server localhost:8082 weight=0;    # canary
# }

# upstream client {
#     server localhost:3001 weight=100;  # stable
#     server localhost:3002 weight=0;    # canary
# }

# server {
#     listen 80;
#     server_name k12b103.p.ssafy.io;

#     # SSL로 리다이렉트하지 않음
#     location /api/ {
#         proxy_pass http://server/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }

#     location / {
#         proxy_pass http://client;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }
# }